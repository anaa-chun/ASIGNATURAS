2.EJERCICIOS DE MANEJO DEL HISTORIAL DE CAMBIOS

Tienes que tener el repo https://github.com/asalber/libro-git mediante la siguiente secuencia de comandos:
> git clone https://github.com/asalber/libro-git.git
> cd libro-git
> git reset --hard 8c808
> git remote remove origin


EJERCICIO 1
1. Mostrar el historial de cambios del repositorio.
git log

2. Crear la carpeta capitulos y crear dentro de ella el fichero capitulo1.txt con el siguiente texto.
Git es un sistema de control de versiones ideado por Linus Torvalds.

mkdir capitulos 
echo > capitulos/capitulo1.txt

3. Añadir los cambios a la zona de intercambio temporal.
git add capitulos/capitulo1.txt

4. Hacer un commit de los cambios con el mensaje “Añadido capítulo 1.”
git commit -m "Añadido capítulo 1."

5. Volver a mostrar el historial de cambios del repositorio.
git log


EJERCICIO 2
1. Crear el fichero capitulo2.txt en la carpeta capitulos con el siguiente texto.
El flujo de trabajo básico con Git consiste en: 
1- Hacer cambios en el repositorio. 
2- Añadir los cambios a la zona de intercambio temporal
3- Hacer un commit de los cambios.

echo "El flujo de trabajo básico con Git consiste en:" > capitulos/capitulo2.txt
echo "1- Hacer cambios en el repositorio." >> capitulos/capitulo2.txt
echo "2- Añadir los cambios en la zona de intercambio temporal." >> capitulos/capitulo2.txt
echo "3- Hacer un commit de los cambios." >> capitulos/capitulo2.txt


2. Añadir los cambios a la zona de intercambio temporal.
git add capitulos/capitulo2.txt

3. Hacer un commit de los cambios con el mensaje “Añadido capítulo 2.”
git commit -m "Añadido capítulo 2."

4. Mostrar las diferencias entre la última versión y dos versiones anteriores.
git diff 


EJERCICIO 3
1. Crear el fichero capitulo3.txt en la carpeta capitulos con el siguiente texto.
Git permite la creación de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea
en ellas.

echo "Git permite la creación de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas."> capitulos/capitulo3.txt

2. Añadir los cambios a la zona de intercambio temporal.
git add capitulos/capitulo3.txt

3. Hacer un commit de los cambios con el mensaje “Añadido capítulo 3.”
git commit -m "Añadido capítulo 3."

4. Mostrar las diferencias entre la primera y la última versión del repositorio.
git diff HEAD^^..HEAD


EJERCICIO 4
1. Añadir al final del fichero indice.txt la siguiente línea: Capítulo 5: Conceptos avanzados
echo "Capítulo 5: Conceptos avanzados" > indice.txt

2. Añadir los cambios a la zona de intercambio temporal.
git add indice.txt

3. Hacer un commit de los cambios con el mensaje “Añadido capítulo 5 al índice.”.
git commit -m "Añadido capítulo 5 al índice."

4. Mostrar quién ha hecho cambios sobre el fichero indice.txt.
git annotate indice.txt

